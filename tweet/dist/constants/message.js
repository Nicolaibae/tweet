"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.userMessage = void 0;
exports.userMessage = {
    VaLIDATION_ERROR: "Validation error",
    NAME_IS_REQUIRED: "Name is required",
    NAME_MUST_BE_STRING: "Name must be a string",
    NAME_LENGTH: "Name must be at least 3 characters long",
    EMAIL_ALREADY_EXISTS: "Email already exists",
    EMAIL_INVALID: "Email is invalid",
    Email_OR_PASSWORD_INCORRECT: "Email or password is incorrect",
    PASSWORD_IS_REQUIRED: "Password is required",
    PASSWORD_MUST_BE_STRING: "Password must be a string",
    PASSWORD_LENGTH: "Password must be at least 6 characters long",
    PASSWORD_MUST_BE_STRONG: "Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character",
    CONFIRM_PASSWORD_IS_REQUIRED: "Confirm password is required",
    CONFIRM_PASSWORD_MUST_BE_STRING: "Confirm password must be a string",
    CONFIRM_PASSWORD_LENGTH: "Confirm password must be at least 6 characters long",
    CONFIRM_PASSWORD_MUST_BE_STRONG: "Confirm password must contain at least one uppercase letter, one lowercase letter, one number, and one special character",
    CONFIRM_PASSWORD_NOT_MATCH: "Confirm password not match the password",
    DATE_OF_BIRTH_IS_ISO8601: "Date of birth must be a valid ISO 8601 date",
    LOGIN_SUCCESS: "Login success",
    REGISTER_SUCCESS: "Register success",
    ACCESS_TOKEN_IS_REQUIRED: "Access token is required",
    REFRESH_TOKEN_IS_REQUIRED: "Refresh token is required",
    REFRESH_TOKEN_INVALID: "Refresh token is invalid",
    USED_REFRESH_TOKEN_OR_DOES_NOT_EXIST: "Used refresh token or does not exist",
    LOGOUT_SUCCESS: "Logout success",
    EMAIL_VERIFY_TOKEN_IS_REQUIRED: "Email verify token is required",
    USER_NOT_FOUND: "User not found",
    EMAIL_ALREADY_VERIFIED_BEFOR: "Email already verified before",
    EMAIL_VERIFY_SUCCESS: "Email verify success",
    RESEND_VERIFY_EMAIL_SUCCESS: "Resend verify email success",
    FORGOT_PASSWORD_SUCCESS: "Check email to reset password",
    FORGOT_PASSWORD_TOKEN_IS_REQUIRED: "Forgot password token is required",
    VERIFY_FORGOT_PASSWORD_SUCCESS: "Verify forgot password success",
    INVALID_FORGOT_PASSWORD_TOKEN: "Invalid forgot password token",
    RESET_PASSWORD_SUCCESS: "Reset password success",
    GET_ME_SUCCESS: "Get user profile success",
    USER_NOT_VERIFIED: "User not verified",
    BIO_MUST_BE_STRING: "Bio must be a string",
    LOCATION_MUST_BE_STRING: "Location must be a string",
    BIO_LENGTH: "Bio lenght must be from 0 to 200 characters",
    LOCATION_LENGTH: "Location lenght must be from 0 to 200 characters",
    WEBSITE_MUST_BE_STRING: "Website must be a string",
    WEBSITE_LENGTH: "Website lenght must be from 0 to 200 characters",
    USERNAME_MUST_BE_STRING: "Username must be a string",
    USERNAME_LENGTH: "Username lenght must be from 0 to 50 characters",
    AVATAR_MUST_BE_STRING: "Avatar must be a string",
    COVER_PHOTO_MUST_BE_STRING: "Cover photo must be a string",
    AVATAR_LENGTH: "Avatar lenght must be from 0 to 400 characters",
    COVER_PHOTO_LENGTH: "Cover photo lenght must be from 0 to 400 characters",
    UPDATE_ME_SUCCESS: "Update user profile success",
    GET_USER_PROFILE_SUCCESS: "Get user profile success",
    FOLLOW_SUCCESS: "Follow success",
    INVALID_USER_ID: "Invalid  user id",
    FOLLOWED: "FOLLOWED",
    ALREADY_UNFOLLOWED: "ALREADY UNFOLLOWED",
    UNFOLLOWED_SUCCESS: 'UNFOLLOWED SUCCESS',
    USERNAME_INVALID: "USERNAME must be 4-15 character long and contain only letters, numbers, undercores, not only number",
    USERNAME_EXISTED: "USERNAME EXISTED",
    OLD_PASSWORD_NOT_MATCH: "OLD PASSWORD NOT MATCH",
    CHANGE_PASSWORD_SUCCESS: "Change password success",
    GMAIL_NOT_VERIFY: "GMAIL NOT VERIFY"
};
